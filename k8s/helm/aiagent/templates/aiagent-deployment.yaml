apiVersion: apps/v1
kind: Deployment
metadata:
  name: aiagent
  labels:
    app: aiagent
spec:
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      app: aiagent
  template:
    metadata:
      labels:
        app: aiagent
    spec:
      initContainers:
        - name: wait-for-postgres
          image: busybox:latest
          command: ['sh', '-c', 'until nc -z {{ .Values.postgres.service.name }} {{ .Values.postgres.service.port }}; do echo waiting for postgres; sleep 2; done']
      containers:
        - name: aiagent
          image: {{ .Values.aiagent.image.repository }}:{{ .Values.aiagent.image.tag }}
          ports:
            - containerPort: {{ .Values.aiagent.targetPort }}
          livenessProbe:
            httpGet:
              path: /healthz
              port: {{ .Values.aiagent.targetPort }}
              scheme: HTTPS
            initialDelaySeconds: 10
            periodSeconds: 10
            timeoutSeconds: 2
            failureThreshold: 3
          readinessProbe:
            httpGet:
              path: /readyz
              port: {{ .Values.aiagent.targetPort }}
              scheme: HTTPS
            initialDelaySeconds: 5
            periodSeconds: 10
            timeoutSeconds: 2
            failureThreshold: 3
          env:
            - name: DEFAULT_USERNAME
              valueFrom:
                secretKeyRef:
                  name: {{ .Release.Namespace }}-default-values
                  key: username
            - name: DEFAULT_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: {{ .Release.Namespace }}-default-values
                  key: password
            - name: DB_HOST
              value: "{{ .Values.postgres.service.name }}"
            - name: DB_PORT
              value: "{{ .Values.postgres.service.port }}"
            - name: DB_NAME
              value: "{{ .Values.postgres.database }}"
            - name: DB_USER
              value: "{{ .Values.postgres.user }}"
            - name: DB_PASSWORD
              value: "{{ .Values.postgres.password }}"
          resources:
            requests:
              cpu: "1000m"
              memory: "1Gi"
            limits:
              cpu: "2000m"
              memory: "2Gi"