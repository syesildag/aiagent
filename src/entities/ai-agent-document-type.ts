/**
 * Aiagentdocumenttype.ts.ts
 *
 * Entity class generated from PostgreSQL table: Entity class generated from PostgreSQL table: public.ai_agent_document_type.AiAgentDocumentType.ts
 *
 * Auto-generated on 2025-10-08
 * Do not edit this file manually.
 */

import { AbstractRepository, Entity } from "../repository/abstractRepository";
import { Column } from "../repository/annotations/Column";
import { Find } from "../repository/annotations/find";
import { Id } from "../repository/annotations/Id";
import { repository } from "../repository/repository";
export class AiAgentDocumentType extends Entity {

   private id?: number;
   private type: string;

   constructor({ id, type }: { id?: number, type: string }) {
      super();
      this.id = id;
      this.type = type;
   }

   @Id('id')
   public getId(): number | undefined {
      return this.id;
   }

   @Column({ columnName: 'type', notNull: true, unique: true })
   public getType(): string {
      return this.type;
   }

}

class AiAgentDocumentTypeRepository extends AbstractRepository<AiAgentDocumentType> {

   constructor() {
      super('ai_agent_document_type', AiAgentDocumentType);
   }

   // Auto-generated finder methods for unique columns
   @Find()
   public async findByType(type: string): Promise<AiAgentDocumentType | null> {
      return null;
   }

}

const aiagentdocumenttypeRepository = new AiAgentDocumentTypeRepository();

repository.set(AiAgentDocumentType, aiagentdocumenttypeRepository);

export default aiagentdocumenttypeRepository;
