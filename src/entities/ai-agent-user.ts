/**
 * Aiagentuser.ts.ts
 *
 * Entity class generated from PostgreSQL table: Entity class generated from PostgreSQL table: public.ai_agent_user.AiAgentUser.ts
 *
 * Auto-generated on 2025-10-04
 * Do not edit this file manually.
 */

import { AbstractRepository, Entity } from "../repository/abstractRepository";
import { Column } from "../repository/annotations/Column";
import { Find } from "../repository/annotations/find";
import { Id } from "../repository/annotations/Id";
import { repository } from "../repository/repository";
export class AiAgentUser extends Entity {

   private id?: number;
   private login: string;
   private password: string;

   constructor({ id, login, password }: { id?: number, login: string, password: string }) {
      super();
      this.id = id;
      this.login = login;
      this.password = password;
   }

   @Id('id')
   public getId(): number | undefined {
      return this.id;
   }

   @Column({ columnName: 'login', notNull: true, unique: true })
   public getLogin(): string {
      return this.login;
   }

   @Column({ columnName: 'password', notNull: true })
   public getPassword(): string {
      return this.password;
   }

}

export class AiAgentUserRepository extends AbstractRepository<AiAgentUser> {

   constructor() {
      super('ai_agent_user', AiAgentUser);
   }

   // Auto-generated finder methods for unique columns
   @Find()
   public async findByLogin(login: string): Promise<AiAgentUser | null> {
      return null;
   }

}

const aiagentuserRepository = new AiAgentUserRepository();

repository.set(AiAgentUser, aiagentuserRepository);

export default aiagentuserRepository;
