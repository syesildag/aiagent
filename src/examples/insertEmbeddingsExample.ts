#!/usr/bin/env node
/**
 * Example usage of insertEmbeddings script
 * 
 * Usage:
 *   npm run build && node dist/scripts/insertEmbeddingsExample.js
 */

import insertEmbeddings, { DocumentInput } from '../scripts/insertEmbeddings';
import Logger from '../utils/logger';

async function runExample() {
  // Sample documents to insert
  const documents: DocumentInput[] = [
    {
      name: "Passerelle entrante - Principe de fonctionnement",
      content: `
1) Resalys interroge le catalogue (service getProducts) pour √©tablir la liste des √©tablissements expos√©s par le fournisseur.
2) Vous associez manuellement un √©tablissement de Resalys avec un √©tablissement de cette liste.
3) Resalys interroge le catalogue une nouvelle fois pour cr√©er dans Resalys chacun des types d'h√©bergement expos√©s par le fournisseur.
4) Vous validez les informations saisies par le camping.
5) Resalys interroge le stock/prix pour incorporer un stock (quantit√© jour par jour) et un prix (prix jour par jour ou par s√©jour) pour chacun des types d'h√©bergement
6) Resalys expose les h√©bergements via le site web du revendeur.
7) Au moment de la vente √† l'internaute, Resalys interroge le PMS pour v√©rifier que le s√©jour est toujours disponible.
8) Une fois la vente effectu√©e, Resalys envoie le dossier de r√©servation au PMS.`,
      type: "resalys-documentation"
    },
    {
      name: "Passerelle entrante - Pr√©requis √† la mise en place", 
      content: `
<ol>
<li>Resalys interroge le catalogue (service getProducts) pour √©tablir la liste des √©tablissements expos√©s par le fournisseur.</li>
<li>Vous associez manuellement un √©tablissement de Resalys avec un √©tablissement de cette liste.</li>
<li>Resalys interroge le catalogue une nouvelle fois pour cr√©er dans Resalys chacun des types d'h√©bergement expos√©s par le fournisseur.</li>
<li>Vous validez les informations saisies par le camping.</li>
<li>Resalys interroge le stock/prix pour incorporer un stock (quantit√© jour par jour) et un prix (prix jour par jour ou par s√©jour) pour chacun des types d'h√©bergement</li>
<li>Resalys expose les h√©bergements via le site web du revendeur.</li>
<li>Au moment de la vente √† l'internaute, Resalys interroge le PMS pour v√©rifier que le s√©jour est toujours disponible.</li>
<li>une fois la vente effectu√©e, Resalys envoie le dossier de r√©servation au PMS.</li>
</ol>`,
      type: "resalys-documentation"
    },
    {
      name: "Passerelle entrante - Activation",
      content: `
Chemin Administration > Configuration > Modules
Il est n√©cessaire d'activer le module "passerelle entrante" afin de pouvoir acc√©der √† l'ensemble des informations li√©s au param√©trage de la passerelle entrante standard. 
Chemin Administration > Configuration > Onglet Passerelles BtoB - Bloc Activer la passerelle entranteRenseignez ici l'ensemble des informations li√©es √† l'activation de la passerelle entrante 
Ces param√®tres sont partag√©s avec l'ensemble des passerelles entrantes dont Webcamp. 
Voir la section suivante du manuel utilisateur : Configuration des passerelles entrantes
Les sous statuts ont √©t√© d√©finis en amont via Param√©trage > Dossiers > Sous statut de r√©servation : 
Sous statuts de dossier ferme / option / d√©log√© : 
* non envoy√© (d√©clenche l'envoi de la r√©servation) : 3 - Not synchronised
* envoy√© (apr√®s envoi de la r√©servation) : 4 - Synchronised
* erreur technique (non envoi de la r√©servation suite √† une erreur technique) : 5 - Technical error
* erreur fonctionnelle (non envoi de la r√©servation suite √† une erreur fonctionnelle) : 6 - Settings error
Sous statuts de dossier annul√© / option expir√©e annul√©e : 
* non envoy√© (d√©clenche l'envoi de la r√©servation) : 7 - Not synchronised
* envoy√© (apr√®s envoi de la r√©servation) : 8 - Synchronised
* erreur technique (non envoi de la r√©servation suite √† une erreur technique) : 9 - Technical error
* erreur fonctionnelle (non envoi de la r√©servation suite √† une erreur fonctionnelle) : 10 - Settings error
      `,
      type: "resalys-documentation"
    }
  ];

  Logger.info('Starting embedding insertion example...');

  try {
    const results = await insertEmbeddings(documents);

    Logger.info(`‚úÖ Successfully inserted ${results.length} documents`);
    
    // Display summary
    console.log('\nüìÑ Inserted Documents:');
    results.forEach((doc, index) => {
      console.log(`${index + 1}. ${doc.getName()}`);
      console.log(`   ID: ${doc.getId()}`);
      console.log(`   Type: ${doc.getTypeId()}`);
      console.log(`   Content length: ${doc.getContent().length} chars`);
      console.log(`   Has embedding: ${doc.getEmbedding() ? 'Yes' : 'No'}`);
      console.log('');
    });

  } catch (error) {
    Logger.error('‚ùå Example failed:', error);
    process.exit(1);
  }
}

// Run if executed directly
if (require.main === module) {
  runExample().catch(error => {
    console.error('Example execution failed:', error);
    process.exit(1);
  });
}

export default runExample;